PicoScenes MATLAB Toolbox
===================================

PicoScenes MATLAB Toolbox (PMT) enables MATLAB to parse the '.csi' file generated by PicoScenes.

System Requirement & Installation
-----------------------------------------
Before getting started with PMT, make sure PicoScenes and PMT are both correctly installed. Refer to  :doc:`installation` and :ref:`install_matlab` for detailed installation steps.

Usage
-------------------
You have four ways to parse a .csi file:

    #. Double-click the selected .csi file in MATLAB Current Folder;
    #. Drag'n'Drop one or multiple .csi files into MATLAB Command Window;
    #. Open `CSI File Batch Loader` App, a MATLAB App, click 'Select .csi files' and select the .csi files or the directories containing .csi files;
    #. run ``opencsi(FILE_PATH)`` in MATLAB Command Window, where `FILE_PATH` is the path to the selected .csi file.

After parsing, you will see bundles with the same names as the .csi files in MATLAB Workspace.

Data Structure
----------------------

    .. _framestructure:

    .. figure:: /images/PicoScenesFrameStructure.jpg
        :figwidth: 1000px
        :align: center

        PicoScenes Tx/Rx Frame Structure


Figure :ref:`framestructure` shows the Tx and Rx frame structures adopted by PicoScenes. PicoScenes frames consists of multiple `PicoScenes Segments` (segment). Each segment is a name- and version-labelled container that holds heterogenous data structure or content.

The PMT parses the .csi files in two stages, the Raw Parsing and Bundled Parsing. 
    - The Raw Parsing: PMT first parses the per-CSI measurement into a MATLAB `cell`. If a .csi file contains :math:`N` CSI measurements, the Raw Parsing will produce a measurement cell array with :math:`N` elements. This parsing level is mandatory for next-level processing. However, CSI measurements being separated in MATLAB cells is apparently not convenient for further analysis.
    - The Bundled Parsing: To overcome the inconveniences of the Raw Parsing, PMT tries to merge the cells into a unified structure--much easier for analysis. However, the merging may fail if the internal data structures are different across all measurements.

In the following, we briefly introduce the resulting data structures of the Raw Parsing and the Bundled Parsing.

Raw version
>>>>>>>>>>>>>>>

Each cell of the Raw Parsing result contains the following items. You may click the links on the left to view its detailed structure.

.. csv-table:: Variables and their description (raw version)
    :header: "Variable", "Description", "Value type"
    :widths: 20, 60, 20

    `StandardHeader`_, "802.11 MAC header", "MATLAB struct"
    `RxSBasic`_, "RxSBasic Segment", "MATLAB struct"
    "RxExtraInfo", "ExtraInfo Segment (measured at Rx end)", "MATLAB struct"
    "CSI", "CSI Segment", "MATLAB struct"
    "MPDU", "Raw MPDU data wo/ FCS bytes", "uint8 array"
    `PicoScenesHeader`_, "PicoScenes Common Header (optional)", "MATLAB struct"
    "TxExtraInfo", "ExtraInfo Segment (measured at Tx end, optional)", "MATLAB struct"
    "Baseband", "Baseband Signal Segment (measured at Rx end, for USRP frontend)", "MATLAB struct"

.. _StandardHeader:

Standard Header
:::::::::::::::

.. csv-table:: Variables of StandardHeader struct
    :header: "Variable", "Description", "Value type"
    :widths: 20, 60, 20

    `ControlField`_, "The Frame Control field", "MATLAB struct"
    "Addr1", "Address 1", "uint8"
    "Addr2", "Address 2", "uint8"
    "Addr3", "Address 3", "uint8"
    "Fragment", "Fragment Number", "uint16"
    "Sequence", "Sequence Number", "uint16"

.. _ControlField:

Control Field
'''''''''''''

.. csv-table:: Variables in ControlField
    :header: "Variable", "Description", "Value Type"
    :widths: 20, 60, 20

    "Version", "802.11 Protocol Version 2-bit", "uint16"
    "Type", "Frame Type 2-bit", "uint16"
    "SubType", "Frame Subtype 4-bit", "uint16"
    "ToDS", "To DS bit", "uint16"
    "FromDS", "From DS bit", "uint16"
    "MoreFrags", "More Fragment bit", "uint16"
    "Retry", "Retry bit", "uint16"
    "PowerManagement", "Power Management bit", "uint16"
    "More", "More Data bit", "uint16"
    "Protected", "Protected Frame bit", "uint16"
    "Order", "+HTC/Order bit", "uint16"

.. _RxSBasic:

RXSBasic Segment
::::::::::::::::::::

.. csv-table:: Variables in basic
    :header: "Variable", "Description", "Value type"
    :widths: 20, 60, 20

    "deviceType", "The type of device sending the data", "uint16"
    "timestamp", "The timestamp when the subcarrier was received", "uint64"
    "channelFreq", "Carrier frequency in MHz", "uint16"
    "packetFormat", "0/1/2/3/4 for NonHT, HT, VHT, HE-SU and HE-MU, respectively", "int8"
    "CBW", "Channel BandWidth, 20/40/80/160 for HT20/HT40+ or -/VHT(or HE)80/VHT(or HE)160 format", "uint16"
    "GI", "Guard Interval, 400/800/1600/3200 for 0.4/0.8/1.6/3.2us", "uint16"
    "MCS", "MCS index, in 802.11ac/ax format (no spatial streams)", "uint8"
    "numSTS", "Number of Space-Time Streams", "uint8"
    "numESS", "Number of Extra Spatial Sounding (802.11n feat.)", "uint8"
    "numRx", "Number of Rx Chains", "uint8"
    "noiseFloor", "Baseband noise floor", "int8"
    "rssi", "RSSI value(dBm)", "uint8"
    "rssi1", "RSSI of the 1st radio chain", "uint8"
    "rssi2", "RSSI of the 2nd radio chain", "uint8"
    "rssi3", "RSSI of the 3rd radio chain", "uint8"

        
.. _PicoScenesHeader:

PicoScenes Common Header
::::::::::::::::::::::::::

.. csv-table:: Variables of PicoScenes Common Header struct
    :header: "Variable", "Description", "Value type"
    :widths: 20, 60, 20

    "MagicValue", "a fixed value of 0x20150315, used for PicoScenes Common Header identification", "uint32"
    "Version", "Version number of PicoScenes Common Header", "uint32"
    "DeviceType", "Device Type Id (0x9300 for QCA9300, 0x5300 for IWL5300, 0x1234 for USRP)", "uint16"
    "FrameType", "The frame type ID defined by PicoScenes plugins", "uint8"
    "TaskId", "A general-purpose random ID, used for packet alignment", "uint16"
    "TxId", "A general-purpose random ID, used for Tx sequence tracking", "uint16"

ExtraInfo
::::::::::::

.. csv-table:: Variables in ExtraInfo
    :header: "Variable", "Description", "Value type"
    :widths: 20, 60, 20

    "version", "The version of ExtraInfo Segment", "uint64"
    "hasLength", "Boolean indicating if length field presents in the ExtraInfo segment.", "uint8"
    "hasVersion", "Boolean indicating if version field presents in the ExtraInfo segment.", "uint8"
    "hasMacAddr_cur", "Boolean indicating if current MAC Address presents in the ExtraInfo segment.", "uint8"
    "hasMacAddr_rom", "Boolean indicating if hardware MAC Address presents in the ExtraInfo segment.", "uint8"
    "hasChansel", "Boolean indicating if QCA9300 CHANSEL field presents in the ExtraInfo segment.", "uint8"
    "hasBMode", "Boolean indicating if QCA9300 BMode field presents in the ExtraInfo segment.", "uint8"
    "hasEVM", "Boolean indicating if EVM field presents in the ExtraInfo segment.", "uint8"
    "hasTxChainMask", "Boolean indicating if Tx chain mask presents in the ExtraInfo segment.", "uint8"
    "hasRxChainMask", "Boolean indicating if Rx chain mask presents in the ExtraInfo segment.", "uint8"
    "hasTxpower", "Boolean indicating if Tx transmit power presents in the ExtraInfo segment.", "uint8"
    "hasTxTSF", "Boolean indicating if (QCA9300) scheduled Tx time field presents in the ExtraInfo segment.", "uint8"
    "hasLastHwTxTSF", "Boolean indicating if (QCA9300) last Tx time field presents in the ExtraInfo segment.", "uint8"
    "hasChannelFlags", "Boolean indicating if QCA9300/IWL5300 channel flag presents in the ExtraInfo segment.", "uint8"
    "hasTxNess", "Boolean indicating if Tx Number of Extra Spatial Sounding (NESS) field presents in the ExtraInfo segment.", "uint8"
    "hasTuningPolicy", "Boolean indicating if (QCA9300) carrier frequency tuning policy field presents in the ExtraInfo segment.", "uint8"
    "hasPLLRate", "Boolean indicating if QCA9300 PLL rate field presents in the ExtraInfo segment.", "uint8"
    "hasPLLClkSel", "Boolean indicating if QCA9300 PLL clock selector field presents in the ExtraInfo segment.", "uint8"
    "hasPLLRefDiv", "Boolean indicating if QCA9300 PLL Reference clock divider field presents in the ExtraInfo segment.", "uint8"
    "hasAGC", "Boolean indicating if AGC field presents in the ExtraInfo segment.", "uint8"
    "hasAntennaSelection", "Boolean indicating if IWL5300 antenna permutation field presents in the ExtraInfo segment.", "uint8"
    "hasSamplingRate", "Boolean indicating if baseband sampling rate presents in the ExtraInfo segment.", "uint8"
    "hasCFO", "Boolean indicating if carrier frequency offset field presents in the ExtraInfo segment.", "uint8"
    "version", "", "uint64"
    "txchansel", "", "uint32"
    "txbmode", "", "uint8"
    "txmacaddr_rom", "", "char"
    "txmacaddr_cur", "", "char"
    "evm", "", "int8"
    "tx_chainmask", "", "uint8"
    "rx_chainmask", "", "uint8"
    "txpower", "Transmit power of Tx", "uint8"
    "cf", "", "uint64"
    "last_txtsf", "", "uint32"
    "channel_mode", "", "uint16"
    "tuning_policy", "", "uint8"
    "pll_rate", "", "uint16"
    "pll_clock_select", "", "uint8"
    "pll_refdiv", "", "uint8"
    "sf", "Sampling frequency", "uint64"
    "txtsf", "", "uint32"
    "tx_ness", "", "uint8"



Bundle version
>>>>>>>>>>>>>>>

.. csv-table:: Variables and their description in a packet
    :header: "Variable", "Description", "Value type"
    :widths: 20, 60, 20

    "header", "`Standard header`_ + `PicoScenes Common Header`_ in raw version", "MATLAB struct"
    "basic", "Basic Segment, the same as the `RXSBasic Segment`_", "MATLAB struct"
    "rxExtraInfo", "The same as the `ExtraInfo`_", "MATLAB struct"
    "txExtraInfo", "The same as the `ExtraInfo`_", "MATLAB struct"
    `channel`_, "channel information", "MATLAB struct"
    "csi", "CSI data", "complex double"
    "mag", "CSI Magnitude(dB), parsed from CSI", "double"
    "phase", "CSI Phase(rad), parsed from CSI", "double"
    "subcarrierIndex", "Index for each subcarrier", "int16"
    `baseband`_, "", "MATLAB struct"
    "bundleName", "Bundle's name, as same as .csi file name", "string"

channel
:::::::::::::::

.. csv-table:: Variables in channel
    :header: "Variable", "Description", "Value type"
    :widths: 20, 60, 20

    "DeviceType", "The type of device sending the data", "double"
    "PacketFormat", "", "double"
    "CBW", "Carrier BandWidth", "double"
    "CarrierFreq", "Carrier Frequency", "double"
    "SamplingRate", "Sampling Rate", "double"
    "SubcarrierBandwidth", "Subcarrier Bandwidth", "double"
    "numTones", "", "uint16"
    "numTx", "", "uint8"
    "numRx", "", "uint8"
    "numESS", " ", "uint8"
    "ant_sel", "", "uint8"

baseband
::::::::::::::

.. csv-table:: Variables in baseband
    :header: "Variable", "Description", "Value type"
    :widths: 20, 60, 20

    "LegacyCSI", ""
    "basebandSignals", ""
    "PreEQSymbols", ""
