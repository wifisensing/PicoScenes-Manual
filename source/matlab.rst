PicoScenes MATLAB Toolbox
===================================

PicoScenes MATLAB Toolbox (PMT) enables MATLAB to parse the '.csi' file generated by PicoScenes.

System Requirement & Installation
-----------------------------------------
Before getting started with PMT, make sure PicoScenes and PMT are both correctly installed. Refer to  :doc:`installation` and :ref:`install_matlab` for more details.

Usage
-------------------
To parse a .csi file, you have three options:

    #. Double-click the selected .csi file in MATLAB Current Folder;
    #. Drag'n'Drop one or multiple .csi files into MATLAB Command Window;
    #. Open `CSI File Batch Loader` App, a MATLAB App, click 'Select .csi files' and select the .csi files or the directories containing .csi files;
    #. run ``opencsi(FILE_PATH)``

After parsing, you will see bundles with the same names as the .csi files in MATLAB Workspace.

Data Structure
----------------------

The PMT parses the .csi files in two stages, the Raw Parsing and Bundled Parsing. 
    - The Raw Parsing: PMT first parses the per-CSI measurement into a MATLAB `cell`. If a .csi file contains :math:`N` CSI measurements, the Raw Parsing will produce a measurement cell array with :math:`N` elements. This parsing level is mandatory for next-level processing. However, CSI measurements being separated in MATLAB cells is apparently not convenient for further analysis.
    - The Bundled Parsing: To overcome the inconveniences of the Raw Parsing, PMT tries to merge the cells into a unified structure--much easier for analysis. However, the merging may fail if the internal data structures are different across all measurements.

In the following, we briefly introduce the resulting data structures of the Raw Parsing and the Bundled Parsing.

Raw version
>>>>>>>>>>>>>>>

Each cell of the Raw Parsing result contains the following items:

.. csv-table:: Variables and their description (raw version)
    :header: "Variable", "Description", "Value type"
    :widths: 20, 60, 20

    `StandardHeader`_, "802.11 MAC header", "MATLAB struct"
    "RxSBasic_", "Channel information (basic set)", "MATLAB struct"
    "RxExtraInfo", "Extra channel information measured at Rx end", "MATLAB struct"
    "TxExtraInfo", "Extra channel information measured at Tx end (optional)", "MATLAB struct"
    "CSI", "CSI information", "MATLAB struct"
    `PicoScenesHeader`_, "PicoScenes Header (optional)", "MATLAB struct"
    "MPDU", "Raw MPDU data wo/ FCS", "uint8 array"

.. _RxSBasic: `basic`_

StandardHeader
:::::::::::::::

.. csv-table:: Variables in StandardHeader
    :header: "Variable", "Description", "Value type"
    :widths: 20, 40, 20

    `ControlField`_, "The header", "MATLAB struct"
    "Addr1", "", "uint8"
    "Addr2", "", "uint8"
    "Addr3", "", "uint8"
    "Fragment", "", "uint16"
    "Sequence", "", "uint16"

ControlField
'''''''''''''

.. csv-table:: Variables in ControlField
    :header: "Variable", "Description", "Value Type"
    :widths: 20, 40, 20

    "Version", "", "uint16"
    "Type", "", "uint16"
    "SubType", "", "uint16"
    "ToDS", "", "uint16"
    "MoreFrags", "", "uint16"
    "Retry", "", "uint16"
    "PowerManagement", "", "uint16"
    "More", "", "uint16"
    "Protected", "", "uint16"
    "Order", "", "uint16"

PicoScenesHeader
::::::::::::::::

.. csv-table:: Variables in PicoScenesHeader
    :header: "Variable", "Description", "Value type"
    :widths: 20, 40, 20

    "MagicValue", "", "uint32"
    "Version", "", "uint32"
    "DeviceType", "", "uint16"
    "FrameType", "", "uint8"
    "TaskId", "", "uint16"
    "TxId", "", "uint16"

ExtraInfo
::::::::::::

.. csv-table:: Variables in extraInfo
    :header: "Variable", "Description", "Value type"
    :widths: 20, 40, 20

    "version", "", "uint64"
    "hasLength", "", "uint8"
    "hasVersion", "", "uint8"
    "hasMacAddr_cur", "", "uint8"
    "hasMacAddr_rom", "", "uint8"
    "hasChansel", "", "uint8"
    "hasBMode", "", "uint8"
    "hasEVM", "", "uint8"
    "hasTxChainMask", "", "uint8"
    "hasRxChainMask", "", "uint8"
    "hasTxpower", "", "uint8"
    "hasCFO", "", "uint8"
    "hasTxTSF", "", "uint8"
    "hasLastHwTxTSF", "", "uint8"
    "hasChannelFlags", "", "uint8"
    "hasTxNess", "", "uint8"
    "hasTuningPolicy", "", "uint8"
    "hasPLLRate", "", "uint8"
    "hasPLLClkSel", "", "uint8"
    "hasPLLRefDiv", "", "uint8"
    "hasAGC", "", "uint8"
    "hasAntennaSelection", "", "uint8"
    "hasSamplingRate", "", "uint8"


Bundle version
>>>>>>>>>>>>>>>

.. csv-table:: Variables and their description in a packet
    :header: "Variable", "Description", "Value type"
    :widths: 20, 40, 20

    `header`_, "The header", "MATLAB struct"
    `basic`_, "The basic information", "MATLAB struct"
    `rxExtraInfo`_, "", "MATLAB struct"
    `txExtraInfo`_, "", "MATLAB struct"
    `channel`_, "channel information", "MATLAB struct"
    "csi", "CSI data", "complex double"
    "mag", "CSI Magnitude(dB), parsed from CSI", "double"
    "phase", "CSI Phase(rad), parsed from CSI", "double"
    "subcarrierIndex", "Index for each subcarrier", "int16"
    `baseband`_, "", "MATLAB struct"
    "bundleName", "Bundle's name, as same as .csi file name", "string"


header
:::::::

.. csv-table:: Variables in header
    :header: "Variable", "Description", "Value type"
    :widths: 20, 40, 20

    "Addr1", "", "uint8"
    "Addr2", "", "uint8"
    "Addr3", "", "uint8"
    "Fragment", "", "uint16"
    "Sequence", "", "uint16"
    "DeviceType", "The type of device sending the data", "uint16"
    "FrameType", "", "uint8"
    "TaskId", "", "uint16"
    "TxId", "", "uint16"

basic
:::::

.. csv-table:: Variables in basic
    :header: "Variable", "Description", "Value type"
    :widths: 20, 40, 20

    "deviceType", "The type of device sending the data", "uint16"
    "timestamp", "The timestamp when the subcarrier was received", "uint64"
    "channelFreq", "", "uint16"
    "packetFormat", "", "int8"
    "CBW", "Carrier BandWidth", "uint16"
    "GI", "Guard Interval for each subcarrier", "uint16"
    "MCS", "Modulation and Coding Scheme index", "uint8"
    "numSTS", "", "uint8"
    "numESS", "", "uint8"
    "numRx", "", "uint8"
    "noiseFloor", "", "int8"
    "rssi", "RSSI value(dB)", "uint8"
    "rssi1", "", "uint8"
    "rssi2", "", "uint8"
    "rssi3", "", "uint8"

rxExtraInfo
:::::::::::::::

.. csv-table:: Variables in rxExtraInfo
    :header: "Variable", "Description", "Value type"
    :widths: 20, 40, 20

    "version", "", "uint64"
    "txchansel", "", "uint32"
    "txbmode", "", "uint8"
    "txmacaddr_rom", "", "char"
    "txmacaddr_cur", "", "char"
    "evm", "", "int8"
    "tx_chainmask", "", "uint8"
    "rx_chainmask", "", "uint8"
    "txpower", "Transmit power of Tx", "uint8"
    "cf", "", "uint64"
    "last_txtsf", "", "uint32"
    "channel_mode", "", "uint16"
    "tuning_policy", "", "uint8"
    "pll_rate", "", "uint16"
    "pll_clock_select", "", "uint8"
    "pll_refdiv", "", "uint8"

txExtraInfo
:::::::::::::

.. csv-table:: Variables in txExtraInfo
    :header: "Variable", "Description", "Value type"
    :widths: 20, 40, 20

    "version", "", "uint64"
    "txchansel", "", "uint32"
    "txbmode", "", "uint8"
    "txmacaddr_rom", "", "char"
    "txmacaddr_cur", "", "char"
    "tx_chainmask", "", "uint8"
    "rx_chainmask", "", "uint8"
    "txpower", "Transmit power of Tx", "uint8"
    "cf", "", "uint64"
    "sf", "Sampling frequency", "uint64"
    "txtsf", "", "uint32"
    "last_txtsf", "", "uint32"
    "channel_mode", "", "uint16"
    "tx_ness", "", "uint8"
    "pll_rate", "PLL rate", "uint16"
    "pll_clock_select", "", "uint8"
    "pll_refdiv", "", "uint8"

channel
:::::::::::::::

.. csv-table:: Variables in channel
    :header: "Variable", "Description", "Value type"
    :widths: 20, 40, 20

    "DeviceType", "The type of device sending the data", "double"
    "PacketFormat", "", "double"
    "CBW", "Carrier BandWidth", "double"
    "CarrierFreq", "Carrier Frequency", "double"
    "SamplingRate", "Sampling Rate", "double"
    "SubcarrierBandwidth", "Subcarrier Bandwidth", "double"
    "numTones", "", "uint16"
    "numTx", "", "uint8"
    "numRx", "", "uint8"
    "numESS", " ", "uint8"
    "ant_sel", "", "uint8"

baseband
::::::::::::::

.. csv-table:: Variables in baseband
    :header: "Variable", "Description", "Value type"
    :widths: 20, 40, 20

    "LegacyCSI", ""
    "basebandSignals", ""
    "PreEQSymbols", ""