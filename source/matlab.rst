PicoScenes MATLAB Toolbox
===================================

PicoScenes MATLAB Toolbox enables MATLAB to parse the '.csi' file generated by PicoScenes.

System Requirement
------------------------------
1. PicoScenes MATLAB Toolbox currently supports three OSes:

  #. Ubuntu 20.04 or its variants, such as Linux Mint 20;
  #. macOS 11.0 Big Sur or above;
  #. Windows 10;

2. MATLAB R2020b or later

3. A C++20 compatible compiler

  + On Ubuntu platform, if you are not sure about this, try run sudo apt install build-essential in Terminal. It will install the default GCC compiler.
  + On macOS, install Xcode 12
  + On windows, install MinGW. It is best to install the latest version of MinGW because some older versions do not support C++20.

Installation
-------------------

#. Open MATLAB
#. Change MATLAB 'Current Folder' to current directory
#. run install_PicoScenes_MATLAB_Toolbox in Command Window

    + if everything goes fine, a message should pop saying that PicoScenes MATLAB Toolbox is successfully installed.

#. Restart MATLAB

Usage
-------------------
To parse a .csi file, you have three options:

    #. Double-click .csi file in MATLAB Current Folder;
    #. Drag'n'Drop one or multiple .csi files into MATLAB Command Window;
    #. Open BatchLoader.fig, a MATLAB-based .csi file batch loader, click 'Select .csi Files' and choose .csi files.

After parsing, you can see a bundle with the same name as the .csi file in the MATLAB workspace.

Data structure
----------------------

This part will show the data structure of the parsed .csi file

If data can be parsed into a bundle, you will get data of the `Bundle Version`_ , otherwise get the `Raw Version`_

Bundle version
>>>>>>>>>>>>>>>

.. csv-table:: Variables and their description in a packet
    :header: "Variable", "Description", "Value type"
    :widths: 20, 40, 20

    `header`_, "The header", "struct"
    `basic`_, "The basic information", "struct"
    `rxExtraInfo`_, "", "struct"
    `txExtraInfo`_, "", "struct"
    `channel`_, "channel information", "struct"
    "csi", "CSI data", "complex double"
    "mag", "CSI Magnitude(dB), parsed from CSI", "double"
    "phase", "CSI Phase(rad), parsed from CSI", "double"
    "subcarrierIndex", "Index for each subcarrier", "int16"
    `baseband`_, "", "struct"
    "bundleName", "Bundle's name, as same as .csi file name", "string"


header
:::::::

.. csv-table:: Variables in header
    :header: "Variable", "Description", "Value type"
    :widths: 20, 40, 20

    "Addr1", "", "uint8"
    "Addr2", "", "uint8"
    "Addr3", "", "uint8"
    "Fragment", "", "uint16"
    "Sequence", "", "uint16"
    "DeviceType", "The type of device sending the data", "uint16"
    "FrameType", "", "uint8"
    "TaskId", "", "uint16"
    "TxId", "", "uint16"

basic
:::::

.. csv-table:: Variables in basic
    :header: "Variable", "Description", "Value type"
    :widths: 20, 40, 20

    "deviceType", "The type of device sending the data", "uint16"
    "timestamp", "The timestamp when the subcarrier was received", "uint64"
    "channelFreq", "", "uint16"
    "packetFormat", "", "int8"
    "CBW", "Carrier BandWidth", "uint16"
    "GI", "Guard Interval for each subcarrier", "uint16"
    "MCS", "Modulation and Coding Scheme index", "uint8"
    "numSTS", "", "uint8"
    "numESS", "", "uint8"
    "numRx", "", "uint8"
    "noiseFloor", "", "int8"
    "rssi", "RSSI value(dB)", "uint8"
    "rssi1", "", "uint8"
    "rssi2", "", "uint8"
    "rssi3", "", "uint8"

rxExtraInfo
:::::::::::::::

.. csv-table:: Variables in rxExtraInfo
    :header: "Variable", "Description", "Value type"
    :widths: 20, 40, 20

    "version", "", "uint64"
    "txchansel", "", "uint32"
    "txbmode", "", "uint8"
    "txmacaddr_rom", "", "char"
    "txmacaddr_cur", "", "char"
    "evm", "", "int8"
    "tx_chainmask", "", "uint8"
    "rx_chainmask", "", "uint8"
    "txpower", "Transmit power of Tx", "uint8"
    "cf", "", "uint64"
    "last_txtsf", "", "uint32"
    "channel_mode", "", "uint16"
    "tuning_policy", "", "uint8"
    "pll_rate", "", "uint16"
    "pll_clock_select", "", "uint8"
    "pll_refdiv", "", "uint8"

txExtraInfo
:::::::::::::

.. csv-table:: Variables in txExtraInfo
    :header: "Variable", "Description", "Value type"
    :widths: 20, 40, 20

    "version", "", "uint64"
    "txchansel", "", "uint32"
    "txbmode", "", "uint8"
    "txmacaddr_rom", "", "char"
    "txmacaddr_cur", "", "char"
    "tx_chainmask", "", "uint8"
    "rx_chainmask", "", "uint8"
    "txpower", "Transmit power of Tx", "uint8"
    "cf", "", "uint64"
    "sf", "Sampling frequency", "uint64"
    "txtsf", "", "uint32"
    "last_txtsf", "", "uint32"
    "channel_mode", "", "uint16"
    "tx_ness", "", "uint8"
    "pll_rate", "PLL rate", "uint16"
    "pll_clock_select", "", "uint8"
    "pll_refdiv", "", "uint8"

channel
:::::::::::::::

.. csv-table:: Variables in channel
    :header: "Variable", "Description", "Value type"
    :widths: 20, 40, 20

    "DeviceType", "The type of device sending the data", "double"
    "PacketFormat", "", "double"
    "CBW", "Carrier BandWidth", "double"
    "CarrierFreq", "Carrier Frequency", "double"
    "SamplingRate", "Sampling Rate", "double"
    "SubcarrierBandwidth", "Subcarrier Bandwidth", "double"
    "numTones", "", "uint16"
    "numTx", "", "uint8"
    "numRx", "", "uint8"
    "numESS", " ", "uint8"
    "ant_sel", "", "uint8"

baseband
::::::::::::::

.. csv-table:: Variables in baseband
    :header: "Variable", "Description", "Value type"
    :widths: 20, 40, 20

    "LegacyCSI", ""
    "basebandSignals", ""
    "PreEQSymbols", ""


Raw version
>>>>>>>>>>>>>>>

.. csv-table:: Variables and their description (raw version)
    :header: "Variable", "Description", "Value type"
    :widths: 20, 40, 20

    `StandardHeader`_, "", "struct"
    "RxSBasic_", "The basic information, same as the basic of bundle version", "struct"
    "RxExtraInfo", "The content in rxExtraInfo_ plus the content in ExtraInfo_", "struct"
    "TxExtraInfo", "The content in txExtraInfo_ plus the content in ExtraInfo_", "struct"
    "CSI", "The content in channel_ plus CSI, Mag, Phase and SubcarrierIndex", "struct"
    `PicoScenesHeader`_, "", "struct"
    "MPDU", "", "uint8"

.. _RxSBasic: `basic`_

StandardHeader
:::::::::::::::

.. csv-table:: Variables in StandardHeader
    :header: "Variable", "Description", "Value type"
    :widths: 20, 40, 20

    `ControlField`_, "The header", "struct"
    "Addr1", "", "uint8"
    "Addr2", "", "uint8"
    "Addr3", "", "uint8"
    "Fragment", "", "uint16"
    "Sequence", "", "uint16"

ControlField
'''''''''''''

.. csv-table:: Variables in ControlField
    :header: "Variable", "Description", "Value Type"
    :widths: 20, 40, 20

    "Version", "", "uint16"
    "Type", "", "uint16"
    "SubType", "", "uint16"
    "ToDS", "", "uint16"
    "MoreFrags", "", "uint16"
    "Retry", "", "uint16"
    "PowerManagement", "", "uint16"
    "More", "", "uint16"
    "Protected", "", "uint16"
    "Order", "", "uint16"

PicoScenesHeader
::::::::::::::::

.. csv-table:: Variables in PicoScenesHeader
    :header: "Variable", "Description", "Value type"
    :widths: 20, 40, 20

    "MagicValue", "", "uint32"
    "Version", "", "uint32"
    "DeviceType", "", "uint16"
    "FrameType", "", "uint8"
    "TaskId", "", "uint16"
    "TxId", "", "uint16"

ExtraInfo
::::::::::::

.. csv-table:: Variables in extraInfo
    :header: "Variable", "Description", "Value type"
    :widths: 20, 40, 20

    "version", "", "uint64"
    "hasLength", "", "uint8"
    "hasVersion", "", "uint8"
    "hasMacAddr_cur", "", "uint8"
    "hasMacAddr_rom", "", "uint8"
    "hasChansel", "", "uint8"
    "hasBMode", "", "uint8"
    "hasEVM", "", "uint8"
    "hasTxChainMask", "", "uint8"
    "hasRxChainMask", "", "uint8"
    "hasTxpower", "", "uint8"
    "hasCFO", "", "uint8"
    "hasTxTSF", "", "uint8"
    "hasLastHwTxTSF", "", "uint8"
    "hasChannelFlags", "", "uint8"
    "hasTxNess", "", "uint8"
    "hasTuningPolicy", "", "uint8"
    "hasPLLRate", "", "uint8"
    "hasPLLClkSel", "", "uint8"
    "hasPLLRefDiv", "", "uint8"
    "hasAGC", "", "uint8"
    "hasAntennaSelection", "", "uint8"
    "hasSamplingRate", "", "uint8"
